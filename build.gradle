plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id "com.jfrog.bintray" version "1.7.3"
	id 'maven-publish'
	id "org.jetbrains.kotlin.jvm" version "1.4.0"
	id "com.wynprice.cursemaven" version "2.1.0"
}

repositories {
	jcenter()
	maven {
		name = "RedstoneParadox"
		url = "https://dl.bintray.com/redstoneparadox/mods"
	}
	maven {
		name = 'CottonMC'
		url = 'http://server.bbkr.space:8081/artifactory/libs-release'
	}
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"


	modImplementation (group: "net.fabricmc", name: "fabric-language-kotlin", version: "${project.fabric_kotlin}") {
		exclude group: 'net.fabricmc.fabric-api'
	}

	/*
	modCompileOnly ("com.terraformersmc:terrestria:${project.terrestria}") {
		exclude group: 'net.fabricmc.fabric-api'
	}
	modCompileOnly ("com.terraformersmc:traverse:${project.traverse}") {
		exclude group: 'net.fabricmc.fabric-api'

	}
	 */

	modApi ("me.shedaniel:RoughlyEnoughItems:${project.rei}") {
		exclude group: 'net.fabricmc.fabric-api'
	}
	include ("me.shedaniel:RoughlyEnoughItems:${project.rei}") {
		exclude group: 'net.fabricmc.fabric-api'
	}

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
	modApi ("io.github.cottonmc:Jankson-Fabric:${project.jankson}") {
		exclude group: 'net.fabricmc.fabric-api'
	}
	include "io.github.cottonmc:Jankson-Fabric:${project.jankson}"

	modApi ("io.github.cottonmc:LibCD:${project.libcd}") {
		exclude group: 'net.fabricmc.fabric-api'
	}
	include "io.github.cottonmc:LibCD:${project.libcd}"

	modApi("io.github.redstoneparadox:paradox-config:${project.pconfig}") {
		exclude group: 'net.fabricmc.fabric-api'
		exclude group: 'net.fabricmc.fabric-language-kotlin'
	}
	include "io.github.redstoneparadox:paradox-config:${project.pconfig}"

	modApi("io.github.redstoneparadox:OakTree:${project.oak_tree}") {
		exclude group: 'net.fabricmc.fabric-api'
	}
	include "io.github.redstoneparadox:OakTree:${project.oak_tree}"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
